///////////////////////////////// Content area /////////////////////////////////
#gallery-content {
  flex: 1;

  > div {
    // WARNING: This fixes a lot of things, so do not delete it!
    position: absolute !important;

    > div {
      // No horizontal scrollbar
      overflow-x: hidden !important;
    }
  }
}

// WIP > better general thumbsize. See if we kind find better size ratio for different screensize.
// We'll have less loss of space perhaps
.thumbnail-small {
  /* --thumbnail-size: calc(100vw / 10); */
  /* --thumbnail-size: calc(calc(100vw / 10) - calc(10 * var(--thumbnail-margin))); */
  // --thumbnail-size: 82px;
  --thumbnail-size: 160px;
}
.thumbnail-medium {
  /* --thumbnail-size: calc(100vw / 6); */
  /* --thumbnail-size: calc(calc(100vw / 6) - calc(6 * var(--thumbnail-margin))); */
  // --thumbnail-size: 182px;
  --thumbnail-size: 240px;
}
.thumbnail-large {
  /* --thumbnail-size: calc(100vw / 4); */
  /* --thumbnail-size: calc(calc(100vw / 4) - calc(4 * var(--thumbnail-margin))); */
  // --thumbnail-size: 282px;
  --thumbnail-size: 320px;
}

/////////////////////// Thumbnail //////////////////////////////////
// If item is selected, and any other selected item is a drop target:
// Provide indication that dropping a tag will apply it to all selected items
#gallery-content.selected-file-dropping {
  .grid, .masonry {
    [aria-selected='true'] > .thumbnail {
      background-color: $yellow1;
    }
  }
  .list {
    [aria-selected='true'] {
      background-color: rgba($yellow1, 0.3);
    }
  }
}

// Gallery Item Container
[role='gridcell'],
[data-masonrycell] {
  position: relative;
  margin: 4px;

  &:hover .thumbnail-tags {
    max-height: var(--thumbnail-size);
    overflow-y: auto;
  }
}

.thumbnail {
  grid-area: image;
  width: var(--thumbnail-size);
  height: var(--thumbnail-size);
  // Allow dragging of images to elsewhere (drag-export)
  -webkit-user-drag: element;
  background-color: var(--background-color-alt);
  border: 0.0625rem solid var(--border-dark);
  border-radius: 0.25rem;

  transition: background-color 0.2s $pt-transition-cubic2;

  // This acts as the border-radius, but also for child elements
  :first-child {
    clip-path: inset(0 round 0.125rem);
    transition: clip-path 0.2s $pt-transition-cubic2;
    pointer-events: none;
  }

  > img {
    width: 100%;
    height: 100%;
    cursor: pointer;
    margin-left: auto;
    margin-right: auto;
    display: block;
    border-radius: 0.25rem;
  }

  &[data-dnd-target='true'] {
    background-color: $yellow1;

    img {
      clip-path: inset(0.5rem round 0.125rem);
    }
  }
}

[aria-selected='true'] > .thumbnail {
  // If selected, show a blue border
  background-color: var(--accent-color-blue);
  > img,
  > .image-error {
    clip-path: inset(0.25rem round 0.125rem); // old design
  }

  // If selected AND drop target: big yellow border
  &[data-dnd-target='true'] {
    background-color: $yellow1;
    > img,
    > .image-error {
      clip-path: inset(0.5rem round 0.125rem);
    }
  }

  > .image-error {
    border: 0.25rem solid $danger; // new design
  }
}

.thumbnail-broken {
  > img,
  > .image-error {
    filter: saturate(0) brightness(0.25);
  }
}

.thumbnail-broken-overlay {
  cursor: pointer;
  position: absolute;
  padding: 0.25rem;
  width: 2.5rem;
  height: 2.5rem;
  top: 0.5rem;
  left: calc(var(--thumbnail-size) - 3rem);
  color: $danger;

  svg {
    width: 2rem !important;
    height: 2rem !important;
  }
}

.thumbnail-tags {
  grid-area: tags;
  display: block;
  position: absolute;
  bottom: 0;
  overflow: hidden;

  > * {
    pointer-events: none;
    margin: 0.25em;
  }
}

.image-error {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  height: 100%;
  width: 100%;
}

// THUMBNAIL LOADER
.donut-loading {
  display: inline-block;
  width: 50%;
  height: 50%;
  margin: 25%;
  border-radius: 50%;
  border: 0.5rem solid var(--background-color);
  border-top-color: var(--primary-color);
  animation: 1.5s spin infinite linear;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/////////////////////// View methods //////////////////////////////////
.list {
  top: 24px; // space for header

  // Stripe pattern
  [aria-rowindex$='0'],
  [aria-rowindex$='2'],
  [aria-rowindex$='4'],
  [aria-rowindex$='6'],
  [aria-rowindex$='8'] {
    background-color: rgba(102, 102, 102, 0.045);
  }

  [role='gridcell'] {
    max-height: 24px;
    
    > div { // cell container
      display: inline-block;
      text-overflow: ellipsis;
      vertical-align: middle;
      white-space: nowrap;

      // Column widths: 
      // - base width of 120px
      width: 120px;
      // - first and last column (filename and tags): fill rest of width
      &:first-child, &:last-child {
        // both are 50% minus half of the rest of the columns (0.5 * 3 * 120)
        width: calc(50% - 180px);
      }

      // Overflow is needed for the first child for allowing the thumbnail to expand on hover
      &:not(:first-child) {
        overflow: hidden;
      }

      > .filename {
        display: inline-block;
        vertical-align: top;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: calc(100% - 32px); // minus thumbnail and some padding
      }
    }

    &[aria-selected='true'] {
      background-color: var(--accent-color-blue-transp);
    }

    &[data-dnd-target='true'] {
      // Yellow background when DnD target
      background-color: rgba($yellow1, 0.6) !important;
    }
  }

  // Force thumbnail size of 24 pixels
  --thumbnail-size: 24px;

  .thumbnail {
    align-self: center;
    display: inline-block;

    img {
      transition: transform 0.2s ease;
      transform-origin: top left;
    }
    &:hover {
      img {
        transform: scale(10);
        z-index: 9000; // >:)
        position: relative;
        border: unset;
        // object-fit: contain; // would be nice, but not sure how to align to top left
      }
    }
  }

  h2 {
    grid-area: title;
    font-size: medium;
    margin: 0;
    white-space: nowrap;
    align-self: end;
  }

  .file-info {
    pointer-events: none;
  }

  .thumbnail-tags {
    min-height: 1.5rem;
    position: unset;
    padding: 0;
  }
}

.list-header {
  height: 24px;
  width: 100%;
  border-bottom: 1px solid var(--background-color);
  
  // TODO: Drop-shadow, but only when not scrolled all the way at the top
  box-shadow: 0 4px 2px -2px rgba(0, 0, 0, 0.2);

  > div {
    // Column widths: 
    // - base width of 120px
    width: 120px;
    // - first and last column (filename and tags): fill rest of width
    &:first-child, &:last-child {
      // both are 50% minus half of the rest of the columns (0.5 * 3 * 120)
      width: calc(50% - 180px);
    }

    padding: 4px;
    font-weight: bold;
    overflow: hidden;

    display: inline-flex;
    justify-content: space-between;

    &.sortable {
      cursor: pointer;
    }
  }
}

.thumbnail-small .list .file-info {
  border-spacing: 0;
}

.grid {
  [role='row'] {
    white-space: nowrap;

    [role='gridcell']:last-child {
      margin-right: 0;
    }
  }

  [role='gridcell'] {
    display: inline-block;

    &:hover .thumbnail-tags {
      max-height: var(--thumbnail-size);
      background-color: rgba(0, 0, 0, 0.25);
    }
  }

  .thumbnail[data-dnd-target='true'] + .thumbnail-tags {
    pointer-events: none;
    max-height: var(--thumbnail-size);
    overflow: hidden; // can't scroll while dropping
  }

  .thumbnail-tags {
    white-space: initial;
    border-radius: 0 0 0.25rem 0.25rem;
    transition: 0.25s $pt-transition-cubic2;
    max-height: 2.8em;
    width: var(--thumbnail-size);
  }
}

.thumbnail-square img {
  background-position: center;
  object-fit: cover;
}
.thumbnail-letterbox img {
  object-fit: contain;
}

///////////////////////////
// Slide mode:
#slide-mode {
  display: flex;
}

#zoomableImage {
  height: calc(100vh - var(--content-top));
  display: flex;
  flex: 1 0 auto;
  flex-direction: column;

  img {
    animation: fade 0.25s cubic-bezier(0.65, 0.05, 0.36, 1);
  }

  > div {
    flex: auto;
    position: relative;

    .side-button {
      top: 0;
      opacity: 0.1;
      height: 100%;
      width: 48px;
      transition: opacity 0.2s ease-in-out;
      position: absolute;

      > svg {
        position: absolute;
        margin-top: -24px;
        top: 50%;
        color: #ffffffc7;
        filter: drop-shadow(0px 3px 4px rgba(0, 0, 0, 0.5));
      }
    }

    .side-button:hover {
      opacity: 1;
    }
  }
}

#content-placeholder {
  max-width: 480px;
  margin: 10% auto auto auto;
  text-align: center;

  .divider {
    margin: auto;
    width: 60%;
    border-bottom: 1px solid var(--text-muted-color);
    margin: 1rem auto;
  }
}

.masonry {
  position: relative;
  overflow-y: auto;
  overflow-x: hidden;
  height: 100%;

  [data-masonrycell] {
    position: absolute;
    transition: transform 0.2s ease;
    .thumbnail {
      // Inherit size from parent style={} attribute
      max-width: inherit;
      width: unset;
      height: inherit;
    }
  }

  #invis-last-selected-item-for-scroll {
    position: absolute;
    pointer-events: none;
    z-index: -1;
  }
}
